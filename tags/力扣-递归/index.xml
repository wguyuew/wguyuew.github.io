<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>力扣 递归 on Gy&#39;s Blog</title>
    <link>https://wguyuew.github.io/tags/%E5%8A%9B%E6%89%A3-%E9%80%92%E5%BD%92/</link>
    <description>Recent content in 力扣 递归 on Gy&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 29 Jun 2020 21:19:03 +0800</lastBuildDate>
    
	<atom:link href="https://wguyuew.github.io/tags/%E5%8A%9B%E6%89%A3-%E9%80%92%E5%BD%92/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>二叉树中的最大路径和</title>
      <link>https://wguyuew.github.io/2020/blog4/</link>
      <pubDate>Mon, 29 Jun 2020 21:19:03 +0800</pubDate>
      
      <guid>https://wguyuew.github.io/2020/blog4/</guid>
      <description>124. 二叉树中的最大路径和 题目描述 给定一个非空二叉树，返回其最大路径和。
本题中，路径被定义为一条从树中任意节点出发，达到任意节点的序列。该路径至少包含一个节点，且不一定经过根节点。
示例 1:
输入: [1,2,3]1/ \2 3输出: 6示例 2:
输入: [-10,9,20,null,null,15,7]-10/ \9 20/ \15 7输出: 42题目思路 二叉树abc.a为根节点，bc分别左右节点的最优值
a/ \b c该二叉树的最优值可能有三种情况：
①a+b+c
②a+b+a的父节点
③a+c+a的父节点
注：②③情况可以递归
判断比较大小，避免负数的情况max(0,x);
所以要做的是递归，递归时记录好全局最大和，返回联络最大和。
代码 /*** Definition for a binary tree node.* public class TreeNode {* int val;* TreeNode left;* TreeNode right;* TreeNode(int x) { val = x; }* }*/class Solution {//全局变量 int ret = Integer.</description>
    </item>
    
  </channel>
</rss>